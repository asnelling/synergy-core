name: Create deb package

on:
  push:
    tags:
      - v[0-9]+.[0-9]+*

jobs:
  create-deb:
    runs-on: ubuntu-latest
    env:
      GIT_COMMIT: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install --yes \
            qtcreator \
            qtbase5-dev \
            qttools5-dev \
            cmake \
            make \
            g++ \
            xorg-dev \
            libssl-dev \
            libx11-dev \
            libsodium-dev \
            libgl1-mesa-glx \
            libegl1-mesa \
            libcurl4-openssl-dev \
            libavahi-compat-libdnssd-dev \
            qtdeclarative5-dev \
            libqt5svg5-dev \
            libsystemd-dev \
            libnotify-dev \
            libgdk-pixbuf2.0-dev \
            libglib2.0-dev \
            debhelper \
            devscripts
      
      - uses: actions/setup-node@v3
        with:
          node-version: 12

      - name: 'Install git core'
        run: npm install @actions/core @octokit/core

      - name: 'Generate next build number'
        id: buildnum
        uses: "./.github/actions/build-number"
      
      - name: 'Update Version.cmake'
        run: python3 ./CI/build_version.py

      - name: 'Build Enterprise (deb)'
        run: |
          mkdir build-ent
          cd build-ent
          cmake -DCMAKE_BUILD_TYPE=Release -DSYNERGY_ENTERPRISE=ON ..
          source ./version
          env | grep SYNERGY_VERSION >> $GITHUB_ENV
          make
        env:
          SYNERGY_ENTERPRISE: 1
      
      - name: 'Setup variables'
        run: |
          SYNERGY_VERSION="$SYNERGY_VERSION_MAJOR.$SYNERGY_VERSION_MINOR.$SYNERGY_VERSION_PATCH"
          SYNERGY_REVISION=`git rev-parse --short=8 HEAD`
          echo SYNERGY_VERSION=$SYNERGY_VERSION >> $GITHUB_ENV
          echo SYNERGY_REVISION=$SYNERGY_REVISION >> $GITHUB_ENV
          echo SYNERGY_DEB_VERSION="${SYNERGY_VERSION}.${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}" >> $GITHUB_ENV
          echo SYNERGY_RPM_VERSION="${SYNERGY_VERSION}-${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}" >> $GITHUB_ENV
      
      - name: 'Package Enterprise binary deb'
        run: |
          python3 ./CI/deb_changelog.py synergy "${SYNERGY_DEB_VERSION}"
          export GPG_TTY=$(tty)
          debuild --preserve-envvar SYNERGY_* --preserve-envvar GIT_COMMIT -us -uc
          mkdir enterprise_package
          filename=$(ls ../synergy_*.deb)
          distro_name=$(lsb_release -sd | sed 's/\..*// ; s/ // ; y/U/u/')
          filename_new="synergy-enterprise_${SYNERGY_VERSION}-${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}_${distro_name}${filename##*${SYNERGY_REVISION}}"
          mv $filename ./enterprise_package/$filename_new
          cd enterprise_package
          md5sum $filename_new >> ${filename_new}.checksum.txt
          sha1sum $filename_new >> ${filename_new}.checksum.txt
          sha256sum $filename_new >> ${filename_new}.checksum.txt
          ls -la
        env:
          SYNERGY_ENTERPRISE: 1
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ steps.buildnum.outputs.next-build }}
          body_path: debian/changelog
          files: enterprise_package/*
