name: Create deb package

on:
  push:
    tags:
      - v[0-9]+.[0-9]+*

jobs:
  create-deb:
    container:
      image: asnell/synergy-builder
    runs-on: ubuntu-latest
    env:
      GIT_COMMIT: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: 'Update Version.cmake'
        run: python3 ./CI/build_version.py

      - name: 'Build Enterprise (deb)'
        run: |
          echo -e "override_dh_auto_configure:\n\tdh_auto_configure -- -DCMAKE_BUILD_TYPE=Release" >> debian/rules
          mkdir build-ent
          cd build-ent
          cmake -DCMAKE_BUILD_TYPE=Release -DSYNERGY_ENTERPRISE=ON ..
          source ./version
          cd ..
          rm -rf build-ent
          env | grep SYNERGY_VERSION >> $GITHUB_ENV
        env:
          SYNERGY_ENTERPRISE: 1
      
      - name: 'Setup variables'
        run: |
          SYNERGY_VERSION="$SYNERGY_VERSION_MAJOR.$SYNERGY_VERSION_MINOR.$SYNERGY_VERSION_PATCH"
          SYNERGY_REVISION=`git rev-parse --short=8 HEAD`
          echo SYNERGY_VERSION=$SYNERGY_VERSION >> $GITHUB_ENV
          echo SYNERGY_REVISION=$SYNERGY_REVISION >> $GITHUB_ENV
          echo SYNERGY_DEB_VERSION="${SYNERGY_VERSION}.${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}" >> $GITHUB_ENV
          echo SYNERGY_RPM_VERSION="${SYNERGY_VERSION}-${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}" >> $GITHUB_ENV
      
      - name: 'Package Enterprise binary deb'
        run: |
          python3 ./CI/deb_changelog.py synergy "${SYNERGY_DEB_VERSION}"
          export GPG_TTY=$(tty)
          debuild --preserve-envvar SYNERGY_* --preserve-envvar GIT_COMMIT -us -uc
          mkdir enterprise_package
          filename=$(ls ../synergy_*.deb)
          distro_name=$(lsb_release -sd | sed 's/\..*// ; s/ // ; y/U/u/')
          filename_new="synergy-enterprise_${SYNERGY_VERSION}-${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}_${distro_name}${filename##*${SYNERGY_REVISION}}"
          mv $filename ./enterprise_package/$filename_new
          cd enterprise_package
          md5sum $filename_new >> ${filename_new}.checksum.txt
          sha1sum $filename_new >> ${filename_new}.checksum.txt
          sha256sum $filename_new >> ${filename_new}.checksum.txt
          ls -la
        env:
          SYNERGY_ENTERPRISE: 1

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: deb-installer
          path: enterprise_package/*

      - name: Upload changelog
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: debian/changelog

  create-dmg:
    runs-on: macos-latest
    env:
      GIT_COMMIT: ${{ github.sha }}
      Qt5_DIR: /usr/local/opt/qt@5
      OpenSSL_DIR: /usr/local/opt/openssl@3
    steps:
      - uses: actions/checkout@v3

      - name: install build dependencies
        run: |
          brew install qt@5 libsodium openssl@3
          python3 -m pip install dmgbuild

      - name: Build Synergy
        run: |
          export PATH="$Qt5_DIR/bin:$PATH"
          python3 ./CI/build_version.py
          mkdir build
          cd build
          cmake \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.6 \
            -DCMAKE_OSX_ARCHITECTURES=x86_64 \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CONFIGURATION_TYPES=Release \
            -DSYNERGY_ENTERPRISE=ON \
            ..
          source ./version
          env | grep SYNERGY_VERSION >> $GITHUB_ENV
          make
          make install/strip
        env:
          CMAKE_PREFIX_PATH: "${{ env.Qt5_DIR }};${{ env.OpenSSL_DIR }}"
          SYNERGY_ENTERPRISE: 1

      - name: Setup variables
        id: variables
        run: |
          SYNERGY_VERSION="${SYNERGY_VERSION_MAJOR}.${SYNERGY_VERSION_MINOR}.${SYNERGY_VERSION_PATCH}"
          SYNERGY_REVISION=$(git rev-parse --short=8 HEAD)
          SYNERGY_DMG_VERSION="${SYNERGY_VERSION}-${SYNERGY_VERSION_STAGE}.${SYNERGY_REVISION}"
          echo SYNERGY_DMG_FILENAME="synergy-enterprise_${SYNERGY_DMG_VERSION}_macos-11.6_x86-64.dmg" >> $GITHUB_ENV
      
      - name: Create installer
        run: |
          dmgbuild \
            -s ./CI/MacOS/installator_settings.py \
            -D app=build/bundle/Synergy.app \
            -D background=build/bundle/Synergy.app/Contents/Resources/.installer_background.tiff \
            Synergy \
            $SYNERGY_DMG_FILENAME
          mkdir enterprise_package
          mv $SYNERGY_DMG_FILENAME enterprise_package/
          cd enterprise_package
          md5 -r $SYNERGY_DMG_FILENAME >> $SYNERGY_DMG_FILENAME.checksum.txt
          shasum $SYNERGY_DMG_FILENAME >> $SYNERGY_DMG_FILENAME.checksum.txt
          shasum -a 256 $SYNERGY_DMG_FILENAME >> $SYNERGY_DMG_FILENAME.checksum.txt
      
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-installer
          path: enterprise_package/*

  make-release:
    runs-on: ubuntu-latest
    needs:
      - create-deb
      - create-dmg
    steps:
      - name: Download installers
        uses: actions/download-artifact@v3

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ github.ref_name }}
          body_path: changelog/changelog
          files: |
            deb-installer/*
            macos-installer/*
